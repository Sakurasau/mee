/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as PrivateImport } from './routes/_private'
import { Route as AuthIndexImport } from './routes/auth/index'
import { Route as AuthSuccessImport } from './routes/auth/success'
import { Route as PrivateLeftbarImport } from './routes/_private/_leftbar'
import { Route as PrivateLeftbarIndexImport } from './routes/_private/_leftbar/index'
import { Route as PrivateLeftbarChatIdImport } from './routes/_private/_leftbar/$chatId'

// Create/Update Routes

const PrivateRoute = PrivateImport.update({
  id: '/_private',
  getParentRoute: () => rootRoute,
} as any)

const AuthIndexRoute = AuthIndexImport.update({
  id: '/auth/',
  path: '/auth/',
  getParentRoute: () => rootRoute,
} as any)

const AuthSuccessRoute = AuthSuccessImport.update({
  id: '/auth/success',
  path: '/auth/success',
  getParentRoute: () => rootRoute,
} as any)

const PrivateLeftbarRoute = PrivateLeftbarImport.update({
  id: '/_leftbar',
  getParentRoute: () => PrivateRoute,
} as any)

const PrivateLeftbarIndexRoute = PrivateLeftbarIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PrivateLeftbarRoute,
} as any)

const PrivateLeftbarChatIdRoute = PrivateLeftbarChatIdImport.update({
  id: '/$chatId',
  path: '/$chatId',
  getParentRoute: () => PrivateLeftbarRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_private': {
      id: '/_private'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PrivateImport
      parentRoute: typeof rootRoute
    }
    '/_private/_leftbar': {
      id: '/_private/_leftbar'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PrivateLeftbarImport
      parentRoute: typeof PrivateImport
    }
    '/auth/success': {
      id: '/auth/success'
      path: '/auth/success'
      fullPath: '/auth/success'
      preLoaderRoute: typeof AuthSuccessImport
      parentRoute: typeof rootRoute
    }
    '/auth/': {
      id: '/auth/'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthIndexImport
      parentRoute: typeof rootRoute
    }
    '/_private/_leftbar/$chatId': {
      id: '/_private/_leftbar/$chatId'
      path: '/$chatId'
      fullPath: '/$chatId'
      preLoaderRoute: typeof PrivateLeftbarChatIdImport
      parentRoute: typeof PrivateLeftbarImport
    }
    '/_private/_leftbar/': {
      id: '/_private/_leftbar/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof PrivateLeftbarIndexImport
      parentRoute: typeof PrivateLeftbarImport
    }
  }
}

// Create and export the route tree

interface PrivateLeftbarRouteChildren {
  PrivateLeftbarChatIdRoute: typeof PrivateLeftbarChatIdRoute
  PrivateLeftbarIndexRoute: typeof PrivateLeftbarIndexRoute
}

const PrivateLeftbarRouteChildren: PrivateLeftbarRouteChildren = {
  PrivateLeftbarChatIdRoute: PrivateLeftbarChatIdRoute,
  PrivateLeftbarIndexRoute: PrivateLeftbarIndexRoute,
}

const PrivateLeftbarRouteWithChildren = PrivateLeftbarRoute._addFileChildren(
  PrivateLeftbarRouteChildren,
)

interface PrivateRouteChildren {
  PrivateLeftbarRoute: typeof PrivateLeftbarRouteWithChildren
}

const PrivateRouteChildren: PrivateRouteChildren = {
  PrivateLeftbarRoute: PrivateLeftbarRouteWithChildren,
}

const PrivateRouteWithChildren =
  PrivateRoute._addFileChildren(PrivateRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof PrivateLeftbarRouteWithChildren
  '/auth/success': typeof AuthSuccessRoute
  '/auth': typeof AuthIndexRoute
  '/$chatId': typeof PrivateLeftbarChatIdRoute
  '/': typeof PrivateLeftbarIndexRoute
}

export interface FileRoutesByTo {
  '': typeof PrivateRouteWithChildren
  '/auth/success': typeof AuthSuccessRoute
  '/auth': typeof AuthIndexRoute
  '/$chatId': typeof PrivateLeftbarChatIdRoute
  '/': typeof PrivateLeftbarIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_private': typeof PrivateRouteWithChildren
  '/_private/_leftbar': typeof PrivateLeftbarRouteWithChildren
  '/auth/success': typeof AuthSuccessRoute
  '/auth/': typeof AuthIndexRoute
  '/_private/_leftbar/$chatId': typeof PrivateLeftbarChatIdRoute
  '/_private/_leftbar/': typeof PrivateLeftbarIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '' | '/auth/success' | '/auth' | '/$chatId' | '/'
  fileRoutesByTo: FileRoutesByTo
  to: '' | '/auth/success' | '/auth' | '/$chatId' | '/'
  id:
    | '__root__'
    | '/_private'
    | '/_private/_leftbar'
    | '/auth/success'
    | '/auth/'
    | '/_private/_leftbar/$chatId'
    | '/_private/_leftbar/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  PrivateRoute: typeof PrivateRouteWithChildren
  AuthSuccessRoute: typeof AuthSuccessRoute
  AuthIndexRoute: typeof AuthIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  PrivateRoute: PrivateRouteWithChildren,
  AuthSuccessRoute: AuthSuccessRoute,
  AuthIndexRoute: AuthIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_private",
        "/auth/success",
        "/auth/"
      ]
    },
    "/_private": {
      "filePath": "_private.tsx",
      "children": [
        "/_private/_leftbar"
      ]
    },
    "/_private/_leftbar": {
      "filePath": "_private/_leftbar.tsx",
      "parent": "/_private",
      "children": [
        "/_private/_leftbar/$chatId",
        "/_private/_leftbar/"
      ]
    },
    "/auth/success": {
      "filePath": "auth/success.tsx"
    },
    "/auth/": {
      "filePath": "auth/index.tsx"
    },
    "/_private/_leftbar/$chatId": {
      "filePath": "_private/_leftbar/$chatId.tsx",
      "parent": "/_private/_leftbar"
    },
    "/_private/_leftbar/": {
      "filePath": "_private/_leftbar/index.tsx",
      "parent": "/_private/_leftbar"
    }
  }
}
ROUTE_MANIFEST_END */
